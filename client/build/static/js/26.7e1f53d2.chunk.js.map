{"version":3,"sources":["Components/message/Message.js","actions/orderActions.js","Components/Notification/index.js","screens/orderScreen/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","Message","_ref","type","message","_ref$desc","desc","a","createElement","description","showIcon","createOrder","order","Object","C_Users_Admin_Desktop_life_project_jposh_live_repo_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Admin_Desktop_life_project_jposh_live_repo_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","getState","_getState","userInfo","config","_yield$axios$post","data","wrap","_context","prev","next","ORDER_CREATE_REQUEST","userLogin","headers","Content-Type","Authorization","concat","token","axios","post","PRODUCTION_BASE_URL","sent","ORDER_CREATE_SUCCESS","payload","CART_CLEAR_ITEMS","localStorage","removeItem","t0","response","logout","ORDER_CREATE_FAIL","stop","_x","_x2","apply","this","arguments","getOrderDetails","id","_ref2","_callee2","_getState2","_yield$axios$get","_context2","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","_x3","_x4","payOrder","orderId","paymentResult","_ref3","_callee3","_getState3","_yield$axios$put","_context3","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","_x5","_x6","deliverOrder","_ref4","_callee4","_getState4","_yield$axios$put2","_context4","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","_x7","_x8","listMyOrders","userID","_ref5","_callee5","_getState5","_yield$axios$get2","_context5","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","_x9","_x10","listOrders","_ref6","_callee6","_getState6","_yield$axios$get3","_context6","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","_x11","_x12","listNewOrders","_ref7","_callee7","_getState7","_yield$axios$get4","_context7","ORDER_LIST_NEW_REQUEST","ORDER_LIST_NEW_SUCCESS","ORDER_LIST_NEW_FAIL","_x13","_x14","getAnalysis","_ref8","_callee8","_getState8","_yield$axios$get5","_context8","ORDER_ANALYSIS_REQUEST","ORDER_ANALYSIS_SUCCESS","ORDER_ANALYSIS_FAIL","_x15","_x16","deleteOrder","_ref9","_callee9","_getState9","_context9","ORDER_DELETE_REQUEST","delete","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","_x17","_x18","process","REACT_APP_JPOSH_STRIPE_KEY","KEY","NODE_ENV","OrderScreen","num","useDispatch","_useState","useNavigate","useState","_useState2","C_Users_Admin_Desktop_life_project_jposh_live_repo_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","stripeToken","setStripeToken","useParams","_useState3","_useState4","isOrderPaid","setIsOrderPaid","user","useSelector","state","orderCreate","cart","_useSelector","orderPay","orderDelivery","orderDetails","loading","error","userDets","itemsPrice","cartItems","reduce","acc","item","price","qty","Math","round","toFixed","itemsNumber","length","totalPrice","Number","useEffect","placeOrderHandler","amount","product","orderItems","then","react__WEBPACK_IMPORTED_MODULE_3___default","_Components_loader_Loader__WEBPACK_IMPORTED_MODULE_19__","status","Modal","info","title","content","style","color","onOk","catch","err","Error","_id","isPaid","ORDER_PAY_RESET","ORDER_DELIVER_RESET","className","_Components_message_Message__WEBPACK_IMPORTED_MODULE_13__","name","email","shippingAddress","address","city","postalCode","country","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","paymentMethod","map","key","src","image","alt","react_stripe_checkout__WEBPACK_IMPORTED_MODULE_17___default","stripeKey","currency"],"mappings":"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","file":"static/js/26.7e1f53d2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Alert } from 'antd';\r\n\r\nconst Message = ({ type, message, desc='' }) => {\r\n  return <Alert\r\n  message={message}\r\n  description={desc}\r\n  type={type}\r\n  showIcon\r\n/>\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message\r\n","import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstant\";\r\nimport { ORDER_ANALYSIS_FAIL, ORDER_ANALYSIS_REQUEST, ORDER_ANALYSIS_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_NEW_FAIL, ORDER_LIST_NEW_REQUEST, ORDER_LIST_NEW_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\r\nimport { LOCAL_BASE_URL, PRODUCTION_BASE_URL } from \"../utils/requestMethods\";\r\n\r\n\r\n\r\nimport { logout } from \"./userActions\";\r\n\r\n\r\n// create order\r\n\r\nexport const createOrder = (order) => async(dispatch, getState) =>{\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.post(`${PRODUCTION_BASE_URL}order/`, order, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data,\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n\r\n        if(message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        } \r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\n// get single order details\r\nexport const getOrderDetails = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n        const {\r\n            userLogin : {\r\n                userInfo\r\n            }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n    }\r\n}\r\n\r\n\r\n// pay order\r\nexport const payOrder = (orderId, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        // https://ancient-beach-60604.herokuapp.com/api/v1/order/${orderId}/pay\r\n        const { data } = await axios.put(`${PRODUCTION_BASE_URL}order/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    })\r\n    }\r\n}\r\n\r\n\r\n// deliver order\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DELIVER_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `${PRODUCTION_BASE_URL}order/${orderId}/deliver`,\r\n        {},\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: ORDER_DELIVER_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_DELIVER_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // list order of a user\r\n  export const listMyOrders = (userID) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/userorder/${userID}`, config)\r\n      dispatch({\r\n        type: ORDER_LIST_MY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_LIST_MY_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n  // list all orders\r\n  export const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/findall`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n   // list all orders\r\n   export const listNewOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_NEW_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/findall?new=true`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_LIST_NEW_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_LIST_NEW_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  // get sales analysis\r\n  export const getAnalysis = () => async(dispatch, getState) =>{\r\n    try {\r\n      dispatch({type: ORDER_ANALYSIS_REQUEST})\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/income`, config);\r\n\r\n      dispatch({\r\n        type: ORDER_ANALYSIS_SUCCESS,\r\n        payload: data\r\n      });\r\n\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_ANALYSIS_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n  // delete an order\r\n  \r\n  export const deleteOrder = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`${PRODUCTION_BASE_URL}order/delete/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_DELETE_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_DELETE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n","import { notification, Space } from 'antd';\r\n\r\n\r\nconst OpenNotificationWithIcon = (type, message,desc) => {\r\n    // open notification\r\n    notification[type]({\r\n        message: {message},\r\n        duration: 1,\r\n        description:\r\n         {desc},\r\n      });   \r\n}\r\n\r\nexport default OpenNotificationWithIcon","import React, { useEffect, useState } from 'react'\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { Modal, Button, Space } from 'antd';\r\nimport { createOrder, deliverOrder, getOrderDetails, payOrder,  } from '../../actions/orderActions'\r\nimport ResponsiveHeader from '../../Components/Header-component/ResponsiveHeader'\r\nimport { ORDER_CREATE_RESET, ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../../constants/userConstants'\r\nimport Message from '../../Components/message/Message'\r\nimport logo from '../../assets/images/logo.ico'\r\n\r\nimport \"./style.css\"\r\n// import { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js'\r\nimport axios from 'axios'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport OpenNotificationWithIcon from '../../Components/Notification'\r\nimport Loader from '../../Components/loader/Loader'\r\nimport { Alert } from 'antd'\r\nimport { PRODUCTION_BASE_URL } from '../../utils/requestMethods'\r\nconst {REACT_APP_JPOSH_STRIPE_KEY, NODE_ENV } = process.env;\r\nconst KEY = REACT_APP_JPOSH_STRIPE_KEY;\r\n\r\n\r\nconst OrderScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [stripeToken, setStripeToken] = useState();\r\n\r\n    const {id} = useParams();\r\n    const [isOrderPaid, setIsOrderPaid ] = useState(false);\r\n    const orderCreate = useSelector((state) => state.orderCreate);\r\n    const user = useSelector((state) => state.userLogin);\r\n    const cart = useSelector((state) => state.cart);\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const orderDeliver = useSelector((state) => state.orderDelivery)\r\n   const {loading, order, error} = useSelector((state) => state.orderDetails);\r\n \r\n    \r\n    const userDets = user.userInfo\r\n\r\n// decimal converter\r\n   const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n\r\ncart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n)\r\n\r\ncart.itemsNumber = cart.cartItems.length\r\n\r\ncart.totalPrice = (\r\n    Number(cart.itemsPrice)\r\n).toFixed(2)\r\n\r\n// modal for displaying success payment\r\nfunction info() {\r\n    Modal.info({\r\n      title: 'Payment succesfull',\r\n      content: (\r\n        <div>\r\n          <p>Order has been created successfully. Your order number is <span style={{\"color\" : \"#1890ff\"}}>{id}</span>\r\n          </p>\r\n          <p>\r\n              Thanks for shopping with us.\r\n          </p>\r\n        </div>\r\n      ),\r\n      onOk() {},\r\n    });\r\n  }\r\n\r\nconst onToken = (token) => {\r\n    setStripeToken(token)\r\n}\r\n\r\n  useEffect(() => {\r\n    const placeOrderHandler = async() => {\r\n        \r\n        const headers = {\r\n            \"Content-Type\" : \"application/json\"\r\n        }\r\n        if(stripeToken){\r\n             await axios.post(`${PRODUCTION_BASE_URL}checkout/payment`, {headers, stripeToken, amount: order.totalPrice, product: order.orderItems})\r\n        .then(response => {\r\n            if(!response){ return <Loader />}\r\n            if(response.status === 200){\r\n               dispatch(payOrder(id, response))\r\n               setIsOrderPaid(true)\r\n               info()\r\n            }\r\n        })\r\n        .catch(err => {\r\n            throw new Error(err)  \r\n        }\r\n            )\r\n        }\r\n       \r\n      };\r\n    if(!order || order._id !== id){\r\n        dispatch({type: ORDER_PAY_RESET});\r\n        dispatch({type: ORDER_DELIVER_RESET});\r\n        dispatch(getOrderDetails(id))\r\n    }else if(!order.isPaid){\r\n        placeOrderHandler() \r\n    }  \r\n  }, [stripeToken, order, dispatch, id])\r\n\r\n\r\n   const deliverHandler = () => {\r\n       dispatch(deliverOrder(order))\r\n   }   \r\n\r\n  return (\r\n        <main className='palce-order-container'>\r\n      {/* <ResponsiveHeader /> */}\r\n      {\r\n          loading && <Loader />\r\n      }\r\n      {\r\n          error && <Message type={\"error\"} message={\"Something went wrong! Check your connection\"} />\r\n      }\r\n      <div className='place-order-inner-cont'>\r\n            <div className='place-order-inner-left'>\r\n                <div className='place-order-title'>\r\n                    <h2>ORDER: {id}</h2>\r\n                </div>\r\n                <div className='review-box'>\r\n                    <div className='box-det'>\r\n                        <h3>SHIPPING</h3>\r\n                        <div className='box-item'>\r\n                            <h4>Name : <span>{userDets && userDets.name}</span></h4>\r\n                        </div>\r\n                        <div className='box-item'>\r\n                            <h4>Email : <span>{userDets && userDets.email}</span></h4>\r\n                        </div>\r\n                        <div className='box-item'>\r\n                            <h4>Address : \r\n                                <span>\r\n                                {cart && cart.shippingAddress.address}, {cart && cart.shippingAddress.city}{' '}\r\n                                {cart && cart.shippingAddress.postalCode},{' '}\r\n                                {cart && cart.shippingAddress.country}\r\n                                </span>\r\n                            </h4>\r\n                            <div>\r\n                           {\r\n                            order && isOrderPaid ?<div> <Message type={'success'} message={`Payment succesfull`}/>\r\n                            <Link to='/my-orders'>\r\n                                <button className='view-order-btn'>View Your Orders</button></Link>\r\n                             </div>: <Message type={'error'} message={`Not yet paid`} />\r\n                            }\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className='box-det'>\r\n                        <h3>PAYMENT METHOD</h3>\r\n                        <div className='box-item'>\r\n                           {\r\n                               cart && cart.paymentMethod ?  <h4>Method : <span>{cart.paymentMethod}</span></h4>\r\n                               :\r\n                               <Link to='/payment'>\r\n                                   <h4>Click to select a payment method</h4>\r\n                               </Link>\r\n                           }\r\n                        </div> \r\n                    </div>\r\n                    <hr />\r\n                    <div className='box-det'>\r\n                        <h3>ORDER ITEMS</h3>\r\n                        {\r\n                           order &&  order.orderItems.map((item) => {\r\n                           return <div className='ordeItems' key={item._id}>\r\n                                <img src={item.image} alt={item.name} />\r\n                                <div><h4>{item.name}</h4></div>\r\n                                <div><h4> {`${item.qty} x ${item.price}`} = {item.qty * item.price} </h4></div>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='place-order-inner-right'>\r\n                <div className='place-order-title'>\r\n                    <h3>ORDER SUMMARY</h3>\r\n                </div>\r\n                <hr />\r\n                <div className='order-review-box'>\r\n                    <h4>Total Itmes</h4> <span>{order && order.orderItems.length}</span>\r\n                </div>\r\n                <hr />\r\n                <div className='order-review-box'>\r\n                    <h4>Total Price</h4> <span>{order && order.totalPrice}</span>\r\n                </div>\r\n                {\r\n                    order &&   <div className='card'>\r\n                            {/* stripe checkout button */}\r\n                               \r\n                            <StripeCheckout \r\n                                 name=\"JPOSH COLLECTIONS\"\r\n                                //  image={logo}\r\n                                 description={`Your total is £ ${order && order.totalPrice} proceed to payment`}\r\n                                 amount={order && order.totalPrice * 100}\r\n                                 token={onToken}\r\n                                 stripeKey={KEY}\r\n                                 currency='GBP'\r\n                            >\r\n                                    <button className='placeorder-btn'>\r\n                                        Make Payment\r\n                                    </button>\r\n                            </StripeCheckout>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n"],"sourceRoot":""}