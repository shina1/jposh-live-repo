{"version":3,"sources":["Components/message/Message.js","Components/Notification/index.js","actions/orderActions.js","screens/orderScreen/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","Message","_ref","type","message","_ref$desc","desc","a","createElement","description","showIcon","createOrder","order","Object","C_Users_Admin_Desktop_life_project_jposh_live_repo_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Admin_Desktop_life_project_jposh_live_repo_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","getState","_getState","userInfo","config","_yield$axios$post","data","wrap","_context","prev","next","ORDER_CREATE_REQUEST","userLogin","headers","Content-Type","Authorization","concat","token","axios","post","PRODUCTION_BASE_URL","sent","ORDER_CREATE_SUCCESS","payload","CART_CLEAR_ITEMS","localStorage","removeItem","t0","response","logout","ORDER_CREATE_FAIL","stop","_x","_x2","apply","this","arguments","getOrderDetails","id","_ref2","_callee2","_getState2","_yield$axios$get","_context2","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","_x3","_x4","payOrder","orderId","paymentResult","_ref3","_callee3","_getState3","_yield$axios$put","_context3","ORDER_PAY_REQUEST","put","console","log","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","_x5","_x6","deliverOrder","_ref4","_callee4","_getState4","_yield$axios$put2","_context4","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","_x7","_x8","listMyOrders","userID","_ref5","_callee5","_getState5","_yield$axios$get2","_context5","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","_x9","_x10","listOrders","_ref6","_callee6","_getState6","_yield$axios$get3","_context6","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","_x11","_x12","listNewOrders","_ref7","_callee7","_getState7","_yield$axios$get4","_context7","ORDER_LIST_NEW_REQUEST","ORDER_LIST_NEW_SUCCESS","ORDER_LIST_NEW_FAIL","_x13","_x14","getAnalysis","_ref8","_callee8","_getState8","_yield$axios$get5","_context8","ORDER_ANALYSIS_REQUEST","ORDER_ANALYSIS_SUCCESS","ORDER_ANALYSIS_FAIL","_x15","_x16","deleteOrder","_ref9","_callee9","_getState9","_context9","ORDER_DELETE_REQUEST","delete","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","_x17","_x18","process","REACT_APP_JPOSH_STRIPE_KEY","REACT_APP_JPOSH_STRIPE_TEST_KEY","KEY","NODE_ENV","OrderScreen","num","useDispatch","_useState","useNavigate","useState","_useState2","C_Users_Admin_Desktop_life_project_jposh_live_repo_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","stripeToken","setStripeToken","useParams","_useState3","_useState4","isOrderPaid","setIsOrderPaid","user","useSelector","state","orderCreate","cart","_useSelector","orderPay","orderDelivery","orderDetails","loading","error","userDets","itemsPrice","cartItems","reduce","acc","item","price","qty","Math","round","toFixed","itemsNumber","length","totalPrice","Number","useEffect","placeOrderHandler","amount","product","orderItems","then","react__WEBPACK_IMPORTED_MODULE_3___default","_Components_loader_Loader__WEBPACK_IMPORTED_MODULE_19__","status","Modal","info","title","content","style","color","onOk","catch","err","_id","isPaid","ORDER_PAY_RESET","ORDER_DELIVER_RESET","className","_Components_message_Message__WEBPACK_IMPORTED_MODULE_13__","name","email","shippingAddress","address","city","postalCode","country","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","paymentMethod","map","key","src","image","alt","react_stripe_checkout__WEBPACK_IMPORTED_MODULE_17___default","stripeKey","currency"],"mappings":"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","file":"static/js/26.573433ce.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Alert } from 'antd';\r\n\r\nconst Message = ({ type, message, desc='' }) => {\r\n  return <Alert\r\n  message={message}\r\n  description={desc}\r\n  type={type}\r\n  showIcon\r\n/>\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message\r\n","import { notification, Space } from 'antd';\r\n\r\n\r\nconst OpenNotificationWithIcon = (type, message,desc) => {\r\n    // open notification\r\n    notification[type]({\r\n        message: {message},\r\n        duration: 1,\r\n        description:\r\n         {desc},\r\n      });   \r\n}\r\n\r\nexport default OpenNotificationWithIcon","import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstant\";\r\nimport { ORDER_ANALYSIS_FAIL, ORDER_ANALYSIS_REQUEST, ORDER_ANALYSIS_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_NEW_FAIL, ORDER_LIST_NEW_REQUEST, ORDER_LIST_NEW_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\r\nimport { LOCAL_BASE_URL, PRODUCTION_BASE_URL } from \"../utils/requestMethods\";\r\n\r\n\r\n\r\nimport { logout } from \"./userActions\";\r\n\r\n\r\n// create order\r\n\r\nexport const createOrder = (order) => async(dispatch, getState) =>{\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.post(`${PRODUCTION_BASE_URL}order/`, order, config)\r\n        \r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data,\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n\r\n        if(message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        } \r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\n// get single order details\r\nexport const getOrderDetails = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n        const {\r\n            userLogin : {\r\n                userInfo\r\n            }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n    }\r\n}\r\n\r\n\r\n// pay order\r\nexport const payOrder = (orderId, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        // https://ancient-beach-60604.herokuapp.com/api/v1/order/${orderId}/pay\r\n        const { data } = await axios.put(`${PRODUCTION_BASE_URL}order/${orderId}/pay`, paymentResult, config)\r\n\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    })\r\n    }\r\n}\r\n\r\n\r\n// deliver order\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DELIVER_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `${PRODUCTION_BASE_URL}order/${orderId}/deliver`,\r\n        {},\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: ORDER_DELIVER_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_DELIVER_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // list order of a user\r\n  export const listMyOrders = (userID) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/userorder/${userID}`, config)\r\n     console.log('this are your list of orders',data);\r\n      dispatch({\r\n        type: ORDER_LIST_MY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_LIST_MY_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n  // list all orders\r\n  export const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/findall`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n   // list all orders\r\n   export const listNewOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_NEW_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/findall?new=true`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_LIST_NEW_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_LIST_NEW_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  // get sales analysis\r\n  export const getAnalysis = () => async(dispatch, getState) =>{\r\n    try {\r\n      dispatch({type: ORDER_ANALYSIS_REQUEST})\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`${PRODUCTION_BASE_URL}order/income`, config);\r\n\r\n      dispatch({\r\n        type: ORDER_ANALYSIS_SUCCESS,\r\n        payload: data\r\n      });\r\n\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_ANALYSIS_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n  // delete an order\r\n  \r\n  export const deleteOrder = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`${PRODUCTION_BASE_URL}order/delete/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_DELETE_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_DELETE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { Modal, Button, Space } from 'antd';\r\nimport { createOrder, deliverOrder, getOrderDetails, payOrder,  } from '../../actions/orderActions'\r\nimport ResponsiveHeader from '../../Components/Header-component/ResponsiveHeader'\r\nimport { ORDER_CREATE_RESET, ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../../constants/userConstants'\r\nimport Message from '../../Components/message/Message'\r\nimport logo from '../../assets/images/logo.ico'\r\n\r\nimport \"./style.css\"\r\n// import { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js'\r\nimport axios from 'axios'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport OpenNotificationWithIcon from '../../Components/Notification'\r\nimport Loader from '../../Components/loader/Loader'\r\nimport { Alert } from 'antd'\r\nimport { PRODUCTION_BASE_URL } from '../../utils/requestMethods'\r\nconst {REACT_APP_JPOSH_STRIPE_TEST_KEY , REACT_APP_JPOSH_STRIPE_KEY, NODE_ENV } = process.env;\r\nconst KEY = REACT_APP_JPOSH_STRIPE_KEY;\r\n\r\n\r\nconst OrderScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [stripeToken, setStripeToken] = useState();\r\n\r\n    const {id} = useParams();\r\n    const [isOrderPaid, setIsOrderPaid ] = useState(false);\r\n    const orderCreate = useSelector((state) => state.orderCreate);\r\n    const user = useSelector((state) => state.userLogin);\r\n    const cart = useSelector((state) => state.cart);\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const orderDeliver = useSelector((state) => state.orderDelivery)\r\n   const {loading, order, error} = useSelector((state) => state.orderDetails);\r\n \r\n    \r\n    const userDets = user.userInfo\r\n\r\n// decimal converter\r\n   const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n\r\ncart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n)\r\n\r\ncart.itemsNumber = cart.cartItems.length\r\n\r\ncart.totalPrice = (\r\n    Number(cart.itemsPrice)\r\n).toFixed(2)\r\n\r\n// modal for displaying success payment\r\nfunction info() {\r\n    Modal.info({\r\n      title: 'Payment succesfull',\r\n      content: (\r\n        <div>\r\n          <p>Order has been created successfully. Your order number is <span style={{\"color\" : \"#1890ff\"}}>{id}</span>\r\n          </p>\r\n          <p>\r\n              Thanks for shopping with us.\r\n          </p>\r\n        </div>\r\n      ),\r\n      onOk() {},\r\n    });\r\n  }\r\n\r\nconst onToken = (token) => {\r\n    setStripeToken(token)\r\n}\r\n\r\n  useEffect(() => {\r\n    const placeOrderHandler = async() => {\r\n        \r\n        const headers = {\r\n            \"Content-Type\" : \"application/json\"\r\n        }\r\n        if(stripeToken){\r\n             await axios.post(`${PRODUCTION_BASE_URL}checkout/payment`, {headers, stripeToken, amount: order.totalPrice, product: order.orderItems})\r\n        .then(response => {\r\n            if(!response){ return <Loader />}\r\n            if(response.status === 200){\r\n               dispatch(payOrder(id, response))\r\n               setIsOrderPaid(true)\r\n               info()\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n           \r\n        }\r\n            )\r\n        }\r\n       \r\n      };\r\n    if(!order || order._id !== id){\r\n        dispatch({type: ORDER_PAY_RESET});\r\n        dispatch({type: ORDER_DELIVER_RESET});\r\n        dispatch(getOrderDetails(id))\r\n    }else if(!order.isPaid){\r\n        placeOrderHandler() \r\n    }  \r\n  }, [stripeToken, order, dispatch, id])\r\n\r\n\r\n   const deliverHandler = () => {\r\n       dispatch(deliverOrder(order))\r\n   }   \r\n\r\n  return (\r\n        <main className='palce-order-container'>\r\n      {/* <ResponsiveHeader /> */}\r\n      {\r\n          loading && <Loader />\r\n      }\r\n      {\r\n          error && <Message type={\"error\"} message={\"Something went wrong! Check your connection\"} />\r\n      }\r\n      <div className='place-order-inner-cont'>\r\n            <div className='place-order-inner-left'>\r\n                <div className='place-order-title'>\r\n                    <h2>ORDER: {id}</h2>\r\n                </div>\r\n                <div className='review-box'>\r\n                    <div className='box-det'>\r\n                        <h3>SHIPPING</h3>\r\n                        <div className='box-item'>\r\n                            <h4>Name : <span>{userDets && userDets.name}</span></h4>\r\n                        </div>\r\n                        <div className='box-item'>\r\n                            <h4>Email : <span>{userDets && userDets.email}</span></h4>\r\n                        </div>\r\n                        <div className='box-item'>\r\n                            <h4>Address : \r\n                                <span>\r\n                                {cart && cart.shippingAddress.address}, {cart && cart.shippingAddress.city}{' '}\r\n                                {cart && cart.shippingAddress.postalCode},{' '}\r\n                                {cart && cart.shippingAddress.country}\r\n                                </span>\r\n                            </h4>\r\n                            <div>\r\n                           {\r\n                            order && isOrderPaid ?<div> <Message type={'success'} message={`Payment succesfull`}/>\r\n                            <Link to='/my-orders'>\r\n                                <button className='view-order-btn'>View Your Orders</button></Link>\r\n                             </div>: <Message type={'error'} message={`Not yet paid`} />\r\n                            }\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className='box-det'>\r\n                        <h3>PAYMENT METHOD</h3>\r\n                        <div className='box-item'>\r\n                           {\r\n                               cart && cart.paymentMethod ?  <h4>Method : <span>{cart.paymentMethod}</span></h4>\r\n                               :\r\n                               <Link to='/payment'>\r\n                                   <h4>Click to select a payment method</h4>\r\n                               </Link>\r\n                           }\r\n                        </div> \r\n                    </div>\r\n                    <hr />\r\n                    <div className='box-det'>\r\n                        <h3>ORDER ITEMS</h3>\r\n                        {\r\n                           order &&  order.orderItems.map((item) => {\r\n                           return <div className='ordeItems' key={item._id}>\r\n                                <img src={item.image} alt={item.name} />\r\n                                <div><h4>{item.name}</h4></div>\r\n                                <div><h4> {`${item.qty} x ${item.price}`} = {item.qty * item.price} </h4></div>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='place-order-inner-right'>\r\n                <div className='place-order-title'>\r\n                    <h3>ORDER SUMMARY</h3>\r\n                </div>\r\n                <hr />\r\n                <div className='order-review-box'>\r\n                    <h4>Total Itmes</h4> <span>{order && order.orderItems.length}</span>\r\n                </div>\r\n                <hr />\r\n                <div className='order-review-box'>\r\n                    <h4>Total Price</h4> <span>{order && order.totalPrice}</span>\r\n                </div>\r\n                {\r\n                    order &&   <div className='card'>\r\n                            {/* stripe checkout button */}\r\n                               \r\n                            <StripeCheckout \r\n                                 name=\"JPOSH COLLECTIONS\"\r\n                                //  image={logo}\r\n                                 description={`Your total is £ ${order && order.totalPrice} proceed to payment`}\r\n                                 amount={order && order.totalPrice * 100}\r\n                                 token={onToken}\r\n                                 stripeKey={KEY}\r\n                                 currency='GBP'\r\n                            >\r\n                                    <button className='placeorder-btn'>\r\n                                        Make Payment\r\n                                    </button>\r\n                            </StripeCheckout>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n"],"sourceRoot":""}